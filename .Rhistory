data = d_2, col = "red" )
abline(lm(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2], data = d_2), col= "red", lwd=2)
d_2
linear_1<- ulam(
alist(
ACW_std ~ dnorm( mu , sigma ) ,
mu <- a[G]  + bACWMY[G] * MY_std ,
a[G] ~ dnorm( 0, 0.5 ) ,
bACWMY[G] ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=d_2, chains = 4, cores = 4, log_lik = TRUE)
xseq = seq( from=-3 , to=4 , length.out=33 )
mu <- link(linear_1, data = list(MY_std=xseq, G= rep(1,33) ) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
mu_resid <- d_2$ACW_std[d_2$G==2] - mu_mean
linear_1.1<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
# compute percentile interval of mean
mu <- link( linear_1.1 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid),
xlab = "ACW residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3) ,
col="red" )
lines( xseq , mu.mean , lwd=2, col="red" )
shade( mu.PI , xseq )
# Slope to report
(mu.PI[2,1]-mu.PI[1,33]) / xseq[1] - xseq[33] # -3
(mu.PI[1,1]-mu.PI[2,33]) / xseq[1] - xseq[33] # 0.03
############## MY ~ ACW SELF###########
plot(MY_std[d_2$G==2] ~ ACW_std[d_2$G==2], data = d_2,
ylab = "Standardized Myelin Content",
ylim = c(-2,2) ,
xlab = "Standardized ACW",
xlim = c(-2,2) ,
col = "red" )
abline(lm(MY_std[d_2$G==2] ~ ACW_std[d_2$G==2], data = d_2), col= "red",lwd=2)
linear_2<- ulam(
alist(
MY_std ~ dnorm( mu , sigma ) ,
mu <- a[G]  + bMYACW[G] * ACW_std ,
a[G] ~ dnorm( 0, 0.5 ) ,
bMYACW[G] ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=d_2 ,chains = 4, cores = 4, log_lik = TRUE)
xseq = seq( from=-3 , to=4 , length.out=33 )
mu <- link(linear_2, data = list(ACW_std=xseq, G=rep(2,33)) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
mu_resid <- d_2$MY_std[d_2$G==2] - mu_mean
linear_2.2<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
# compute percentile interval of mean
mu <- link( linear_2.2 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid) ,
xlab = "MY residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3) ,
col="red" )
lines( xseq , mu.mean , lwd=2, col = "red" )
shade( mu.PI , xseq )
# Slope to report
(mu.mean[1] - mu.mean[33] )/ (xseq[1] - xseq[33])
(mu.PI[2,1]-mu.PI[1,33]) / xseq[1] - xseq[33] # 0.01
(mu.PI[1,1]-mu.PI[2,33]) / xseq[1] - xseq[33] # 0.45
dev.off()
png("C:/Documents and Settings/kaan/Belgelerim/nonself_posterior.png", width = 800, height = 800, res = 150)
############## ACW ~ MY NONSELF################
par(mfrow=c(2,2),pty="s", mar = c(5, 4, 4, 2) + 0.1)
plot(ACW_std[d_2$G==1] ~ MY_std[d_2$G==1], data = d_2,
xlab = "Standardized Myelin Content",
xlim = c(-3,4) ,
ylab = "Standardized ACW",
ylim = c(-2,4) ,
col = "blue" )
abline(lm(ACW_std[d_2$G==1] ~ MY_std[d_2$G==1], data = d_2), col= "blue",lwd=2)
linear_3<- ulam(
alist(
ACW_std ~ dnorm( mu , sigma ) ,
mu <- a[G]  + bACWMY[G] * MY_std ,
a[G] ~ dnorm( 0, 0.5 ) ,
bACWMY[G] ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=d_2,chains = 4, cores = 4, log_lik = TRUE)
xseq = seq( from=-3 , to=4 , length.out=327 )
mu <- link(linear_3, data = list(MY_std=xseq, G=rep(1,327)) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
mu_resid <- d_2$ACW_std[d_2$G==1] - mu_mean
linear_3.1<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==1],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
# compute percentile interval of mean
mu <- link( linear_3.1 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==1],
resid = mu_resid) ,
xlab = "ACW residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3),
col=c("blue") )
lines( xseq , mu.mean , lwd=2 )
shade( mu.PI , xseq )
# Slope to report
(mu.mean[1] - mu.mean[327] )/ (xseq[1] - xseq[327])
(mu.PI[2,1] - mu.PI[1,327]) / (xseq[1] - xseq[327]) # -0.31
(mu.PI[1,1]-mu.PI[2,327]) / (xseq[1] - xseq[327]) # -0.2
############## MY ~ ACW NONSELF###########
plot(MY_std[d_2$G==1] ~ ACW_std[d_2$G==1], data = d_2,
ylab = "Standardized Myelin Content",
ylim = c(-3,4) ,
xlab = "Standardized ACW",
xlim = c(-2,4) ,
col = "blue" )
abline(lm(MY_std[d_2$G==1] ~ ACW_std[d_2$G==1], data = d_2), col= "blue",lwd = 2)
linear_4<- ulam(
alist(
MY_std ~ dnorm( mu , sigma ) ,
mu <- a[G]  + bMYACW[G] * ACW_std ,
a[G] ~ dnorm( 0, 0.5 ) ,
bMYACW[G] ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=d_2)
xseq = seq( from=-3 , to=4 , length.out=327 )
mu <- link(linear_4, data = list(ACW_std=xseq, G=rep(1,327)) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
mu_resid <- d_2$MY_std[d_2$G==1] - mu_mean
linear_4.2<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==1],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
# compute percentile interval of mean
mu <- link( linear_4.2 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==1],
resid = mu_resid) ,
xlab = "MY residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3) ,
col="blue" )
lines( xseq , mu.mean , lwd=2 )
shade( mu.PI , xseq )
# Slope to report
(mu.mean[1] - mu.mean[327] )/ (xseq[1] - xseq[327])
(mu.PI[2,1] - mu.PI[1,327]) / (xseq[1] - xseq[327]) # -0.03
(mu.PI[1,1]-mu.PI[2,327]) / (xseq[1] - xseq[327]) # 0.09
par(mfrow=c(2,2),pty="s", mar = c(5, 4, 4, 2) + 0.1)
plot(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2],
xlab = "Standardized Myelin Content",
xlim = c(-2,2) ,
ylab = "Standardized ACW",
ylim = c(-2,2) ,
data = d_2, col = "red" )
abline(lm(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2], data = d_2), col= "red", lwd=2)
plot(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2],
xlab = "Standardized Myelin Content",
xlim = c(-2,2) ,
ylab = "Standardized ACW",
ylim = c(-2,2) ,
data = d_2, col = "red" )
abline(lm(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2], data = d_2), col= "red", lwd=2)
plot(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2],
xlab = "Standardized Myelin Content",
xlim = c(-2,2) ,
ylab = "Standardized ACW",
ylim = c(-2,2) ,
data = d_2, col = "red" )
abline(lm(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2], data = d_2), col= "red", lwd=2)
mu <- link( linear_1.1 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid),
xlab = "ACW residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3) ,
col="red" )
par(mfrow=c(2,2),pty="s", mar = c(5, 4, 4, 2) + 0.1)
plot(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2],
xlab = "Standardized Myelin Content",
xlim = c(-2,2) ,
ylab = "Standardized ACW",
ylim = c(-2,2) ,
data = d_2, col = "red" )
abline(lm(ACW_std[d_2$G==2] ~ MY_std[d_2$G==2], data = d_2), col= "red", lwd=2)
mu <- link( linear_1.1 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid),
xlab = "ACW residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3) ,
col="red" )
d_2
mu
d_2$ACW_std[d_2$G==2]
d_2$G
xseq = seq( from=-3 , to=4 , length.out=33 )
mu <- link(linear_1, data = list(MY_std=xseq, G= rep(2,33) ) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
mu_resid <- d_2$ACW_std[d_2$G==2] - mu_mean
linear_1.1<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
library(rstan)
linear_1.1<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
mu <- link( linear_1.1 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
mu
d_2$GS_std[d_2$G==2]
mu <- link( linear_1.1 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid),
xlab = "ACW residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3) ,
col="red" )
lines( xseq , mu.mean , lwd=2, col="red" )
shade( mu.PI , xseq )
(mu.PI[2,1]-mu.PI[1,33]) / xseq[1] - xseq[33]
(mu.PI[1,1]-mu.PI[2,33]) / xseq[1] - xseq[33]
mu.PI
(mu.PI[1,1]-mu.PI[2,33]) / xseq[1] - xseq[33]
(mu.PI[2,1]-mu.PI[1,33]) / xseq[1] - xseq[33]
min(mu.PI[1,1])
min(mu.PI[,1])
mu.PI
mu.PI[,]
mu.PI[,1]
min(mu.PI[,1])
max(mu.PI[,33])
(max(mu.PI[,1]) - min(mu.PI[,33]) )
max(mu.PI[,1])
min(mu.PI[,33])
(max(mu.PI[,1]) - min(mu.PI[,33]) ) / xseq[1] - xseq[33]
(min(mu.PI[,1]) - max(mu.PI[,33]) ) / xseq[1] - xseq[33] # -
plot(MY_std[d_2$G==2] ~ ACW_std[d_2$G==2], data = d_2,
ylab = "Standardized Myelin Content",
ylim = c(-2,2) ,
xlab = "Standardized ACW",
xlim = c(-2,2) ,
col = "red" )
abline(lm(MY_std[d_2$G==2] ~ ACW_std[d_2$G==2], data = d_2), col= "red",lwd=2)
linear_2<- ulam(
alist(
MY_std ~ dnorm( mu , sigma ) ,
mu <- a[G]  + bMYACW[G] * ACW_std ,
a[G] ~ dnorm( 0, 0.5 ) ,
bMYACW[G] ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=d_2 ,chains = 4, cores = 4, log_lik = TRUE)
xseq = seq( from=-3 , to=4 , length.out=33 )
mu <- link(linear_2, data = list(ACW_std=xseq, G=rep(2,33)) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
mu_resid <- d_2$MY_std[d_2$G==2] - mu_mean
linear_2.2<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
mu <- link( linear_2.2 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==2],
resid = mu_resid) ,
xlab = "MY residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3) ,
col="red" )
lines( xseq , mu.mean , lwd=2, col = "red" )
shade( mu.PI , xseq )
par(mfrow=c(2,2),pty="s", mar = c(5, 4, 4, 2) + 0.1)
plot(ACW_std[d_2$G==1] ~ MY_std[d_2$G==1], data = d_2,
xlab = "Standardized Myelin Content",
xlim = c(-3,4) ,
ylab = "Standardized ACW",
ylim = c(-2,4) ,
col = "blue" )
abline(lm(ACW_std[d_2$G==1] ~ MY_std[d_2$G==1], data = d_2), col= "blue",lwd=2)
linear_3<- ulam(
alist(
ACW_std ~ dnorm( mu , sigma ) ,
mu <- a[G]  + bACWMY[G] * MY_std ,
a[G] ~ dnorm( 0, 0.5 ) ,
bACWMY[G] ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=d_2,chains = 4, cores = 4, log_lik = TRUE)
xseq = seq( from=-3 , to=4 , length.out=327 )
mu <- link(linear_3, data = list(MY_std=xseq, G=rep(1,327)) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
mu_resid <- d_2$ACW_std[d_2$G==1] - mu_mean
linear_3.1<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==1],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
mu <- link( linear_3.1 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==1],
resid = mu_resid) ,
xlab = "ACW residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3),
col=c("blue") )
lines( xseq , mu.mean , lwd=2 )
shade( mu.PI , xseq )
(mu.mean[1] - mu.mean[327] )/ (xseq[1] - xseq[327])
plot(MY_std[d_2$G==1] ~ ACW_std[d_2$G==1], data = d_2,
ylab = "Standardized Myelin Content",
ylim = c(-3,4) ,
xlab = "Standardized ACW",
xlim = c(-2,4) ,
col = "blue" )
abline(lm(MY_std[d_2$G==1] ~ ACW_std[d_2$G==1], data = d_2), col= "blue",lwd = 2)
linear_4<- ulam(
alist(
MY_std ~ dnorm( mu , sigma ) ,
mu <- a[G]  + bMYACW[G] * ACW_std ,
a[G] ~ dnorm( 0, 0.5 ) ,
bMYACW[G] ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=d_2)
xseq = seq( from=-3 , to=4 , length.out=327 )
mu <- link(linear_4, data = list(ACW_std=xseq, G=rep(1,327)) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
mu_resid <- d_2$MY_std[d_2$G==1] - mu_mean
linear_4.2<- ulam(
alist(
GS ~ dnorm( mu , sigma ) ,
mu <- a  + bResid * resid ,
a ~ dnorm( 0, 0.5 ) ,
bResid ~ dnorm( 0 , 0.35 ) ,
sigma ~ dexp( 1 ) ) ,
data=data.frame(GS = d_2$GS_std[d_2$G==1],
resid = mu_resid)
,chains = 4, cores = 4, log_lik = TRUE)
mu <- link( linear_4.2 , data=list(resid = xseq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI ) # plot it all
plot( GS ~ mu_resid , data=data.frame(GS = d_2$GS_std[d_2$G==1],
resid = mu_resid) ,
xlab = "MY residuals",
xlim = c(-3,4) ,
ylab = "Standardized GSCORR",
ylim = c(-2,3) ,
col="blue" )
lines( xseq , mu.mean , lwd=2 )
shade( mu.PI , xseq )
test <- readMat("./DATA/MED.mat")
library(R.matlab)
subjdat<-readMat("./DATA/SUBJ_WISE.mat")
test2
SUBJ_GLOB<-data.frame(subjdat$SUBJ.WISE.GLOBAL)
colnames(SUBJ_GLOB)<-c("ACW","GS","MY")
SUBJ_SELF<-data.frame(subjdat$SUBJ.WISE.SELF)
colnames(SUBJ_SELF)<-c("ACW","GS","MY")
SUBJ_NONSELF<-data.frame(subjdat$SUBJ.WISE.NONSELF)
colnames(SUBJ_NONSELF)<-c("ACW","GS","MY")
data_MY<- data.frame(
SELF = SUBJ_SELF$MY,
NONSELF = SUBJ_NONSELF$MY
)
##
self <- as.logical(test$MED[,5]-1)
data_ACW <- data.frame(
SELF = colMeans(test2$ACW0.halfwidth.bp.dt[self,]) ,
NONSELF = colMeans(test2$ACW0.halfwidth.bp.dt[!self,])
)
data_GS <- data.frame(
SELF = colMeans(test2$GSCORR.arr[self,]) ,
NONSELF = colMeans(test2$GSCORR.arr[!self,] )
)
data_GS
data_ACW
data.frame(
ACW=c(data_ACW$SELF,data_ACW$NONSELF),
MY=c(data_MY$SELF,data_MY$NONSELF),
GS=c(data_GS$SELF,data_GS$NONSELF),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
id = c( c(1:100),c(1:100) )
)
readxl::read_xlsx("./DATA/DAT.xlsx")
DAT <- readxl::read_xlsx("./DATA/DAT.xlsx")
DAT$GENDER
factor(rep(1:2, each = nrow(data_ACW)),levels = c(1,2))
data.frame(
ACW = c(data_ACW$SELF,data_ACW$NONSELF),
GSCORR = c(data_GS$SELF,data_GS$NONSELF),
MY = c(data_MY$SELF,data_MY$NONSELF),
ID = c( c(1:100),c(1:100) ),
GENDER = DAT$GENDER,
CLASS = factor(rep(1:2, each = nrow(data_ACW)),levels = c(1,2))
)
data.frame(
ACW = c(data_ACW$SELF,data_ACW$NONSELF),
GSCORR = c(data_GS$SELF,data_GS$NONSELF),
MY = c(data_MY$SELF,data_MY$NONSELF),
ID = c( c(1:100),c(1:100) ),
GENDER = DAT$GENDER,
CLASS = factor(rep(1:2, each = nrow(data_ACW)),levels = c(1,2))
) %>% write.csv(file = "C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/SUBJ_BP_DT.csv",
row.names = FALSE)
library(tidy)
library(tidyverse)
data.frame(
ACW = c(data_ACW$SELF,data_ACW$NONSELF),
GSCORR = c(data_GS$SELF,data_GS$NONSELF),
MY = c(data_MY$SELF,data_MY$NONSELF),
ID = c( c(1:100),c(1:100) ),
GENDER = DAT$GENDER,
CLASS = factor(rep(1:2, each = nrow(data_ACW)),levels = c(1,2))
) %>% write.csv(file = "C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/SUBJ_BP_DT.csv",
row.names = FALSE)
test <- readMat("./DATA/MED.mat")
test2 <- readMat("./DATA/HighLowBandpassedINT_halfwidth_detrended.mat")
RegWise <- data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.halfwidth.bp.dt),
GS = rowMeans(test2$GSCORR.arr),
G_1 = ifelse(test$MED[,5]=="2","Self","Non-Self") )
RegWise
data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.halfwidth.bp.dt),
GS = rowMeans(test2$GSCORR.arr),
G_1 = test$MED[,5] ) %>% write.csv(file = "C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/REG_BP_DT.csv",
row.names = FALSE)
data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.halfwidth.bp.dt),
GS = rowMeans(test2$GSCORR.arr),
G_1 = test$MED[,5] )
