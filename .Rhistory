setwd("~/SFC_Nature_Comm_2023/atlas_based_analyses/intracortical_myelin")
setwd("~/SFC_Nature_Comm_2023/atlas_based_analyses/intracortical_myelin")
test <- readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/MED.mat")
library(R.matlab)
test <- readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/MED.mat")
test2 <- readMat("./DATA/HighLowBandpassedINT_halfwidth.mat")
RegWise <- data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.arr),
GS = rowMeans(test2$GSCORR.arr),
G_1 = ifelse(test$MED[,5]=="2","Self","Non-Self") )
test <- readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/MED.mat")
test2 <- readMat("./DATA/HighLowBandpassedINT_halfwidth.mat")
test <- readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/MED.mat")
test2 <- readMat("./DATA/HighLowBandpassedINT_halfwidth.mat")
RegWise <- data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.halfwidth),
GS = rowMeans(test2$GSCORR.arr),
G_1 = ifelse(test$MED[,5]=="2","Self","Non-Self") )
RegWise
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
library(tidyverse)
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
library(rstatix)
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
RegWise %>% wilcox_effsize(ACW ~ G_1)
result <- result %>% add_xy_position(group ="GS_1",dodge = 0.8)
boxp <- RegWise %>% ggviolin( x = "G_1", y = "ACW", add = "median_iqr",
color = "G_1", palette = "npg", size=2)
library(ggpubr)
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
RegWise %>% wilcox_effsize(ACW ~ G_1)
result <- result %>% add_xy_position(group ="GS_1",dodge = 0.8)
boxp <- RegWise %>% ggviolin( x = "G_1", y = "ACW", add = "median_iqr",
color = "G_1", palette = "npg", size=2)
boxp_ACW <- boxp + stat_pvalue_manual(
result, label = "{p.signif}", tip.length = 0,size=6,step.increase = 0.05
)  + xlab("") + theme(legend.position = "none") + theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 15),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 18),    # Plot title size
)
# For Reporting
statistic <- result$statistic[1]
p_value <- result$p[1]
# MY
result <- RegWise %>%
wilcox_test(MY ~ G_1) %>%
add_significance("p")
RegWise %>% wilcox_effsize(MY ~ G_1)
result <- result %>% add_xy_position(group ="GS_1",dodge = 0.8)
boxp <- RegWise %>% ggviolin( x = "G_1", y = "MY", add = "median_iqr",color = "G_1" , size=2) + scale_color_npg()
library(ggsci)
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
RegWise %>% wilcox_effsize(ACW ~ G_1)
result <- result %>% add_xy_position(group ="GS_1",dodge = 0.8)
boxp <- RegWise %>% ggviolin( x = "G_1", y = "ACW", add = "median_iqr",
color = "G_1", palette = "npg", size=2)
boxp_ACW <- boxp + stat_pvalue_manual(
result, label = "{p.signif}", tip.length = 0,size=6,step.increase = 0.05
)  + xlab("") + theme(legend.position = "none") + theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 15),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 18),    # Plot title size
)
# For Reporting
statistic <- result$statistic[1]
p_value <- result$p[1]
# MY
result <- RegWise %>%
wilcox_test(MY ~ G_1) %>%
add_significance("p")
RegWise %>% wilcox_effsize(MY ~ G_1)
result <- result %>% add_xy_position(group ="GS_1",dodge = 0.8)
boxp <- RegWise %>% ggviolin( x = "G_1", y = "MY", add = "median_iqr",color = "G_1" , size=2) + scale_color_npg()
boxp_MY <- boxp + stat_pvalue_manual(
result, label = "{p.signif}", tip.length = 0,size=6,step.increase = 0.05
)  + xlab("") + theme(legend.position = "none") + theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 15),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 18),    # Plot title size
)
# GSCORR
result <- RegWise %>%
wilcox_test(GS ~ G_1) %>%
add_significance("p")
RegWise %>% wilcox_effsize(GS ~ G_1)
result <- result %>% add_xy_position(group ="GS_1",dodge = 0.8)
boxp <- RegWise %>% ggviolin( x = "G_1", y = "GS", add = "median_iqr",color = "G_1" , size=2) + scale_color_npg() + ylab("GSCORR")
boxp_GS <- boxp + stat_pvalue_manual(
result, label = "{p.signif}", tip.length = 0,size=6,step.increase = 0.05
)  + xlab("") + theme(legend.position = "none") + theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 15),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 18),    # Plot title size
)
RegWise_DESC <- ggarrange(boxp_MY,boxp_ACW,boxp_GS,ncol=3)
RegWise_DESC <- annotate_figure(RegWise_DESC, top = text_grob("Subjects are averaged to regions", color = "black", face = "bold", size = 14))
RegWise_DESC
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
RegWise %>%
wilcox_test(ACW ~ G_1)
RegWise %>%
t_test(ACW ~ G_1)
subjdat<-readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/SUBJ_WISE.mat")
subjdat<-readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/SUBJ_WISE.mat")
subjdat
RegWise
max(RegWise$GS)
SUBJ_SELF
SUBJ_SELF<-data.frame(subjdat$SUBJ.WISE.SELF)
test2$ACW0.halfwidth
RegWise$G_1
test$MED[,5]
test$MED[,5]-1
self <- test$MED[,5]-1
test2$ACW0.halfwidth[self]
test2$ACW0.halfwidth[self,]
self
test2$ACW0.halfwidth
ggdensity(test2$ACW0.halfwidth)
ggdensity(c(test2$ACW0.halfwidth))
ggdensity(test2$ACW0.halfwidth[,1])
test2$ACW0.halfwidth[,1]
str(test2$ACW0.halfwidth)
test2$ACW0.halfwidth[,1]
test2$ACW0.halfwidth[1,]
test2$ACW0.halfwidth[self,]
SUBJ_SELF<-data.frame(subjdat$SUBJ.WISE.SELF)
SUBJ_NONSELF<-data.frame(subjdat$SUBJ.WISE.NONSELF)
SUBJ_SELF$MY
SUBJ_SELF
colnames(SUBJ_SELF)<-c("ACW","GS","MY")
SUBJ_SELF<-data.frame(subjdat$SUBJ.WISE.SELF)
colnames(SUBJ_SELF)<-c("ACW","GS","MY")
SUBJ_NONSELF<-data.frame(subjdat$SUBJ.WISE.NONSELF)
colnames(SUBJ_NONSELF)<-c("ACW","GS","MY")
SUBJ_SELF$MY
test2$ACW0.halfwidth[self,]
rowMeans(test2$ACW0.halfwidth[self,])
test2$ACW0.halfwidth
help("rowMeans")
test2$ACW0.halfwidth
test2$ACW0.halfwidth[self,]
rowMeans(test2$ACW0.halfwidth[self,])
colMeans(test2$ACW0.halfwidth[self,])
self
!self
colMeans(test2$ACW0.halfwidth[!self,])
test2$ACW0.halfwidth[!self,]
test2$GSCORR.arr[!self,]
data_ACW <- data.frame(
SELF = test2$ACW0.halfwidth[!self,] ,
NONSELF = colMeans(test2$ACW0.halfwidth[!self,])
)
data_ACW <- data.frame(
SELF = colMeans(test2$ACW0.halfwidth[!self,]) ,
NONSELF = colMeans(test2$ACW0.halfwidth[!self,])
)
data_GS <- data.frame(
SELF = colMeans(test2$GSCORR.arr[self,]) ,
NONSELF = colMeans(test2$GSCORR.arr[!self,] )
)
data_MY<- data.frame(
SELF = SUBJ_SELF$MY,
NONSELF = SUBJ_NONSELF$MY
)
plot_data <- data.frame(
Subject = rep(seq_len(nrow(data_ACW)), 2),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
Value = c(data_ACW$SELF, data_ACW$NONSELF)
)
# For reporting
plot_data %>% t_test(formula = Value ~ Group,paired = TRUE)
plot_data %>% cohens_d(formula = Value ~ Group,paired = TRUE)
# Plot the paired observations with lines connecting data points for each subject
PAIR_ACW<- ggplot(plot_data, aes(x = Group, y = Value, color = Group)) +
geom_boxplot(alpha = 0) +  # Hide boxplots for better clarity
geom_point(position = position_jitter(width = 0.2), size = 1) +
labs(title = "SELF>NONSELF",
x = "Group",
y = "ACW",
color = "Subject") +
stat_compare_means(method = "t.test",paired = TRUE,label = "p.signif") +
theme_minimal() +
scale_color_npg() +
geom_line(aes(group = Subject), alpha = 0.7, color = "gray",linewidth=0.9) +
theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 14),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 10),    # Plot title size
)
### GS ###
plot_data <- data.frame(
Subject = rep(seq_len(nrow(data_GS)), 2),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
Value = c(data_GS$SELF, data_GS$NONSELF)
)
# For reporting
plot_data %>% t_test(formula = Value ~ Group,paired = TRUE)
plot_data %>% cohens_d(formula = Value ~ Group,paired = TRUE)
# Plot the paired observations with lines connecting data points for each subject
PAIR_GS<- ggplot(plot_data, aes(x = Group, y = Value, color = Group)) +
geom_boxplot(alpha = 0) +  # Hide boxplots for better clarity
geom_point(position = position_jitter(width = 0.2), size = 1) +
labs(title = "SELF>NONSELF",
x = "Group",
y = "GSCORR",
color = "Subject") +
stat_compare_means(method = "t.test",paired = TRUE,label = "p.signif") +
theme_minimal()+
scale_color_npg() +
geom_line(aes(group = Subject), alpha = 0.7, color = "gray",linewidth=0.9) +  theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 14),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 10),    # Plot title size
)
t.test(data_GS$SELF,data_GS$NONSELF,paired = TRUE)
### Myelin ###
plot_data <- data.frame(
Subject = rep(seq_len(nrow(data_MY)), 2),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
Value = c(data_MY$SELF, data_MY$NONSELF)
)
# For reporting
plot_data %>% t_test(formula = Value ~ Group,paired = TRUE)
plot_data %>% cohens_d(formula = Value ~ Group,paired = TRUE)
# Plot the paired observations with lines connecting data points for each subject
PAIR_MY<- ggplot(plot_data, aes(x = Group, y = Value, color = Group)) +
geom_boxplot(alpha = 0) +  # Hide boxplots for better clarity
geom_point(position = position_jitter(width = 0.2), size = 1) +
labs(title = "NONSELF>SELF",
x = "Group",
y = "MY",
color = "Subject") +
stat_compare_means(method = "t.test",paired = TRUE,label = "p.signif") +
theme_minimal() +
scale_color_npg() +
geom_line(aes(group = Subject), alpha = 0.7, color = "gray",linewidth=0.9) +  theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 14),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 10),    # Plot title size
)
PAIR<-ggarrange(PAIR_MY, PAIR_ACW, PAIR_GS, nrow = 1, common.legend = TRUE)
plot_data <- data.frame(
Subject = rep(seq_len(nrow(data_ACW)), 2),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
Value = c(data_ACW$SELF, data_ACW$NONSELF)
)
plot_data
plot_data %>% t_test(formula = Value ~ Group,paired = TRUE)
data_ACW
data_ACW <- data.frame(
SELF = colMeans(test2$ACW0.halfwidth[self,]) ,
NONSELF = colMeans(test2$ACW0.halfwidth[!self,])
)
data_GS <- data.frame(
SELF = colMeans(test2$GSCORR.arr[self,]) ,
NONSELF = colMeans(test2$GSCORR.arr[!self,] )
)
### ACW ###
plot_data <- data.frame(
Subject = rep(seq_len(nrow(data_ACW)), 2),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
Value = c(data_ACW$SELF, data_ACW$NONSELF)
)
# For reporting
plot_data %>% t_test(formula = Value ~ Group,paired = TRUE)
plot_data %>% cohens_d(formula = Value ~ Group,paired = TRUE)
# Plot the paired observations with lines connecting data points for each subject
PAIR_ACW<- ggplot(plot_data, aes(x = Group, y = Value, color = Group)) +
geom_boxplot(alpha = 0) +  # Hide boxplots for better clarity
geom_point(position = position_jitter(width = 0.2), size = 1) +
labs(title = "SELF>NONSELF",
x = "Group",
y = "ACW",
color = "Subject") +
stat_compare_means(method = "t.test",paired = TRUE,label = "p.signif") +
theme_minimal() +
scale_color_npg() +
geom_line(aes(group = Subject), alpha = 0.7, color = "gray",linewidth=0.9) +
theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 14),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 10),    # Plot title size
)
PAIR_ACW
plot_data <- data.frame(
Subject = rep(seq_len(nrow(data_GS)), 2),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
Value = c(data_GS$SELF, data_GS$NONSELF)
)
# For reporting
plot_data %>% t_test(formula = Value ~ Group,paired = TRUE)
plot_data %>% cohens_d(formula = Value ~ Group,paired = TRUE)
# Plot the paired observations with lines connecting data points for each subject
PAIR_GS<- ggplot(plot_data, aes(x = Group, y = Value, color = Group)) +
geom_boxplot(alpha = 0) +  # Hide boxplots for better clarity
geom_point(position = position_jitter(width = 0.2), size = 1) +
labs(title = "SELF>NONSELF",
x = "Group",
y = "GSCORR",
color = "Subject") +
stat_compare_means(method = "t.test",paired = TRUE,label = "p.signif") +
theme_minimal()+
scale_color_npg() +
geom_line(aes(group = Subject), alpha = 0.7, color = "gray",linewidth=0.9) +  theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 14),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 10),    # Plot title size
)
PAIR_GS
test2$ACW0.halfwidth[self,]
test2$GSCORR.arr[self,]
self <- as.logical(test$MED[,5]-1)
self
test2$ACW0.halfwidth[self,]
colMeans(test2$ACW0.halfwidth[self,])
data_ACW <- data.frame(
SELF = colMeans(test2$ACW0.halfwidth[self,]) ,
NONSELF = colMeans(test2$ACW0.halfwidth[!self,])
)
data_GS <- data.frame(
SELF = colMeans(test2$GSCORR.arr[self,]) ,
NONSELF = colMeans(test2$GSCORR.arr[!self,] )
)
max(data_GS)
min(data_GS)
### ACW ###
plot_data <- data.frame(
Subject = rep(seq_len(nrow(data_ACW)), 2),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
Value = c(data_ACW$SELF, data_ACW$NONSELF)
)
# For reporting
plot_data %>% t_test(formula = Value ~ Group,paired = TRUE)
plot_data %>% cohens_d(formula = Value ~ Group,paired = TRUE)
# Plot the paired observations with lines connecting data points for each subject
PAIR_ACW<- ggplot(plot_data, aes(x = Group, y = Value, color = Group)) +
geom_boxplot(alpha = 0) +  # Hide boxplots for better clarity
geom_point(position = position_jitter(width = 0.2), size = 1) +
labs(title = "SELF>NONSELF",
x = "Group",
y = "ACW",
color = "Subject") +
stat_compare_means(method = "t.test",paired = TRUE,label = "p.signif") +
theme_minimal() +
scale_color_npg() +
geom_line(aes(group = Subject), alpha = 0.7, color = "gray",linewidth=0.9) +
theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 14),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 10),    # Plot title size
)
PAIR_ACW
plot_data <- data.frame(
Subject = rep(seq_len(nrow(data_GS)), 2),
Group = factor(rep(c("SELF", "NONSELF"), each = nrow(data_ACW)),levels = c("SELF","NONSELF")),
Value = c(data_GS$SELF, data_GS$NONSELF)
)
# For reporting
plot_data %>% t_test(formula = Value ~ Group,paired = TRUE)
plot_data %>% cohens_d(formula = Value ~ Group,paired = TRUE)
# Plot the paired observations with lines connecting data points for each subject
PAIR_GS<- ggplot(plot_data, aes(x = Group, y = Value, color = Group)) +
geom_boxplot(alpha = 0) +  # Hide boxplots for better clarity
geom_point(position = position_jitter(width = 0.2), size = 1) +
labs(title = "SELF>NONSELF",
x = "Group",
y = "GSCORR",
color = "Subject") +
stat_compare_means(method = "t.test",paired = TRUE,label = "p.signif") +
theme_minimal()+
scale_color_npg() +
geom_line(aes(group = Subject), alpha = 0.7, color = "gray",linewidth=0.9) +  theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 14),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 10),    # Plot title size
)
PAIR_GS
RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
RegWise %>% wilcox_effsize(ACW ~ G_1)
result <- result %>% add_xy_position(group ="GS_1",dodge = 0.8)
boxp <- RegWise %>% ggviolin( x = "G_1", y = "ACW", add = "median_iqr",
color = "G_1", palette = "npg", size=2)
boxp_ACW <- boxp + stat_pvalue_manual(
result, label = "{p.signif}", tip.length = 0,size=6,step.increase = 0.05
)  + xlab("") + theme(legend.position = "none") + theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 15),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 18),    # Plot title size
)
boxp_ACW
test <- readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/MED.mat")
test2 <- readMat("./DATA/HighLowBandpassedINT_halfwidth.mat")
RegWise <- data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.halfwidth),
GS = rowMeans(test2$GSCORR.arr),
G_1 = ifelse(test$MED[,5]=="2","Self","Non-Self") )
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
result
test <- readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/MED.mat")
test2 <- readMat("./DATA/HighLowBandpassedINT.mat")
RegWise <- data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.halfwidth),
GS = rowMeans(test2$GSCORR.arr),
G_1 = ifelse(test$MED[,5]=="2","Self","Non-Self") )
readMat("./DATA/HighLowBandpassedINT.mat")
test2 <- readMat("./DATA/HighLowBandpassedINT.mat")
RegWise <- data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.arr),
GS = rowMeans(test2$GSCORR.arr),
G_1 = ifelse(test$MED[,5]=="2","Self","Non-Self") )
# ACW
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
result
test2 <- readMat("./DATA/HighLowBandpassedINT_halfwidth.mat")
RegWise <- data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.arr),
GS = rowMeans(test2$GSCORR.arr),
G_1 = ifelse(test$MED[,5]=="2","Self","Non-Self") )
test <- readMat("C:/Users/kaan/Documents/NatComm2023/MYELIN/DATA/MED.mat")
test2 <- readMat("./DATA/HighLowBandpassedINT_halfwidth.mat")
RegWise <- data.frame(MY = test$MED[,3],
ACW = rowMeans(test2$ACW0.halfwidth),
GS = rowMeans(test2$GSCORR.arr),
G_1 = ifelse(test$MED[,5]=="2","Self","Non-Self") )
# ACW
result <- RegWise %>%
wilcox_test(ACW ~ G_1) %>%
add_significance("p")
RegWise %>% wilcox_effsize(ACW ~ G_1)
result <- result %>% add_xy_position(group ="GS_1",dodge = 0.8)
boxp <- RegWise %>% ggviolin( x = "G_1", y = "ACW", add = "median_iqr",
color = "G_1", palette = "npg", size=2)
boxp_ACW <- boxp + stat_pvalue_manual(
result, label = "{p.signif}", tip.length = 0,size=6,step.increase = 0.05
)  + xlab("") + theme(legend.position = "none") + theme(
text = element_text(size = 10),          # Overall text size
axis.title = element_text(size = 15),    # Axis title size
axis.text = element_text(size = 10),     # Axis text size
legend.title = element_text(size = 16),  # Legend title size
legend.text = element_text(size = 14),   # Legend text size
plot.title = element_text(size = 18),    # Plot title size
)
boxp_ACW
